
Debug/HelloCojac:     file format elf32-i386


Disassembly of section .init:

08048380 <_init>:
 8048380:	55                   	push   %ebp
 8048381:	89 e5                	mov    %esp,%ebp
 8048383:	53                   	push   %ebx
 8048384:	83 ec 04             	sub    $0x4,%esp
 8048387:	e8 00 00 00 00       	call   804838c <_init+0xc>
 804838c:	5b                   	pop    %ebx
 804838d:	81 c3 68 2c 00 00    	add    $0x2c68,%ebx
 8048393:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 8048399:	85 d2                	test   %edx,%edx
 804839b:	74 05                	je     80483a2 <_init+0x22>
 804839d:	e8 1e 00 00 00       	call   80483c0 <__gmon_start__@plt>
 80483a2:	e8 09 01 00 00       	call   80484b0 <frame_dummy>
 80483a7:	e8 f4 0d 00 00       	call   80491a0 <__do_global_ctors_aux>
 80483ac:	58                   	pop    %eax
 80483ad:	5b                   	pop    %ebx
 80483ae:	c9                   	leave  
 80483af:	c3                   	ret    

Disassembly of section .plt:

080483b0 <__gmon_start__@plt-0x10>:
 80483b0:	ff 35 f8 af 04 08    	pushl  0x804aff8
 80483b6:	ff 25 fc af 04 08    	jmp    *0x804affc
 80483bc:	00 00                	add    %al,(%eax)
	...

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 00 b0 04 08    	jmp    *0x804b000
 80483c6:	68 00 00 00 00       	push   $0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x30>

080483d0 <__libc_start_main@plt>:
 80483d0:	ff 25 04 b0 04 08    	jmp    *0x804b004
 80483d6:	68 08 00 00 00       	push   $0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x30>

080483e0 <nextafter@plt>:
 80483e0:	ff 25 08 b0 04 08    	jmp    *0x804b008
 80483e6:	68 10 00 00 00       	push   $0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x30>

080483f0 <printf@plt>:
 80483f0:	ff 25 0c b0 04 08    	jmp    *0x804b00c
 80483f6:	68 18 00 00 00       	push   $0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x30>

08048400 <__isnanf@plt>:
 8048400:	ff 25 10 b0 04 08    	jmp    *0x804b010
 8048406:	68 20 00 00 00       	push   $0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x30>

08048410 <puts@plt>:
 8048410:	ff 25 14 b0 04 08    	jmp    *0x804b014
 8048416:	68 28 00 00 00       	push   $0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x30>

Disassembly of section .text:

08048420 <_start>:
 8048420:	31 ed                	xor    %ebp,%ebp
 8048422:	5e                   	pop    %esi
 8048423:	89 e1                	mov    %esp,%ecx
 8048425:	83 e4 f0             	and    $0xfffffff0,%esp
 8048428:	50                   	push   %eax
 8048429:	54                   	push   %esp
 804842a:	52                   	push   %edx
 804842b:	68 30 91 04 08       	push   $0x8049130
 8048430:	68 40 91 04 08       	push   $0x8049140
 8048435:	51                   	push   %ecx
 8048436:	56                   	push   %esi
 8048437:	68 ce 90 04 08       	push   $0x80490ce
 804843c:	e8 8f ff ff ff       	call   80483d0 <__libc_start_main@plt>
 8048441:	f4                   	hlt    
 8048442:	90                   	nop
 8048443:	90                   	nop
 8048444:	90                   	nop
 8048445:	90                   	nop
 8048446:	90                   	nop
 8048447:	90                   	nop
 8048448:	90                   	nop
 8048449:	90                   	nop
 804844a:	90                   	nop
 804844b:	90                   	nop
 804844c:	90                   	nop
 804844d:	90                   	nop
 804844e:	90                   	nop
 804844f:	90                   	nop

08048450 <__do_global_dtors_aux>:
 8048450:	55                   	push   %ebp
 8048451:	89 e5                	mov    %esp,%ebp
 8048453:	53                   	push   %ebx
 8048454:	83 ec 04             	sub    $0x4,%esp
 8048457:	80 3d 24 b0 04 08 00 	cmpb   $0x0,0x804b024
 804845e:	75 3f                	jne    804849f <__do_global_dtors_aux+0x4f>
 8048460:	a1 28 b0 04 08       	mov    0x804b028,%eax
 8048465:	bb 10 af 04 08       	mov    $0x804af10,%ebx
 804846a:	81 eb 0c af 04 08    	sub    $0x804af0c,%ebx
 8048470:	c1 fb 02             	sar    $0x2,%ebx
 8048473:	83 eb 01             	sub    $0x1,%ebx
 8048476:	39 d8                	cmp    %ebx,%eax
 8048478:	73 1e                	jae    8048498 <__do_global_dtors_aux+0x48>
 804847a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048480:	83 c0 01             	add    $0x1,%eax
 8048483:	a3 28 b0 04 08       	mov    %eax,0x804b028
 8048488:	ff 14 85 0c af 04 08 	call   *0x804af0c(,%eax,4)
 804848f:	a1 28 b0 04 08       	mov    0x804b028,%eax
 8048494:	39 d8                	cmp    %ebx,%eax
 8048496:	72 e8                	jb     8048480 <__do_global_dtors_aux+0x30>
 8048498:	c6 05 24 b0 04 08 01 	movb   $0x1,0x804b024
 804849f:	83 c4 04             	add    $0x4,%esp
 80484a2:	5b                   	pop    %ebx
 80484a3:	5d                   	pop    %ebp
 80484a4:	c3                   	ret    
 80484a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484b0 <frame_dummy>:
 80484b0:	55                   	push   %ebp
 80484b1:	89 e5                	mov    %esp,%ebp
 80484b3:	83 ec 18             	sub    $0x18,%esp
 80484b6:	a1 14 af 04 08       	mov    0x804af14,%eax
 80484bb:	85 c0                	test   %eax,%eax
 80484bd:	74 12                	je     80484d1 <frame_dummy+0x21>
 80484bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80484c4:	85 c0                	test   %eax,%eax
 80484c6:	74 09                	je     80484d1 <frame_dummy+0x21>
 80484c8:	c7 04 24 14 af 04 08 	movl   $0x804af14,(%esp)
 80484cf:	ff d0                	call   *%eax
 80484d1:	c9                   	leave  
 80484d2:	c3                   	ret    
 80484d3:	90                   	nop

080484d4 <longFromDouble>:
 80484d4:	55                   	push   %ebp
 80484d5:	89 e5                	mov    %esp,%ebp
 80484d7:	83 ec 18             	sub    $0x18,%esp
 80484da:	8b 45 08             	mov    0x8(%ebp),%eax
 80484dd:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80484e0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484e3:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80484e6:	dd 45 e8             	fldl   -0x18(%ebp)
 80484e9:	dd 5d f8             	fstpl  -0x8(%ebp)
 80484ec:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484ef:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80484f2:	c9                   	leave  
 80484f3:	c3                   	ret    

080484f4 <doubleFromLong>:
 80484f4:	55                   	push   %ebp
 80484f5:	89 e5                	mov    %esp,%ebp
 80484f7:	83 ec 18             	sub    $0x18,%esp
 80484fa:	8b 45 08             	mov    0x8(%ebp),%eax
 80484fd:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048500:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048503:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048506:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048509:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804850c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804850f:	89 55 fc             	mov    %edx,-0x4(%ebp)
 8048512:	dd 45 f8             	fldl   -0x8(%ebp)
 8048515:	c9                   	leave  
 8048516:	c3                   	ret    

08048517 <UIntFromInt>:
 8048517:	55                   	push   %ebp
 8048518:	89 e5                	mov    %esp,%ebp
 804851a:	83 ec 10             	sub    $0x10,%esp
 804851d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048520:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048523:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048526:	c9                   	leave  
 8048527:	c3                   	ret    

08048528 <intFromUInt>:
 8048528:	55                   	push   %ebp
 8048529:	89 e5                	mov    %esp,%ebp
 804852b:	83 ec 10             	sub    $0x10,%esp
 804852e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048531:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048534:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048537:	c9                   	leave  
 8048538:	c3                   	ret    

08048539 <longFromTwoUInts>:
 8048539:	55                   	push   %ebp
 804853a:	89 e5                	mov    %esp,%ebp
 804853c:	56                   	push   %esi
 804853d:	53                   	push   %ebx
 804853e:	83 ec 10             	sub    $0x10,%esp
 8048541:	8b 45 08             	mov    0x8(%ebp),%eax
 8048544:	ba 00 00 00 00       	mov    $0x0,%edx
 8048549:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804854c:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804854f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048552:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048555:	89 c1                	mov    %eax,%ecx
 8048557:	89 d3                	mov    %edx,%ebx
 8048559:	89 cb                	mov    %ecx,%ebx
 804855b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048560:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048563:	ba 00 00 00 00       	mov    $0x0,%edx
 8048568:	89 ce                	mov    %ecx,%esi
 804856a:	09 c6                	or     %eax,%esi
 804856c:	89 75 f0             	mov    %esi,-0x10(%ebp)
 804856f:	89 d8                	mov    %ebx,%eax
 8048571:	09 d0                	or     %edx,%eax
 8048573:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048576:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048579:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804857c:	83 c4 10             	add    $0x10,%esp
 804857f:	5b                   	pop    %ebx
 8048580:	5e                   	pop    %esi
 8048581:	5d                   	pop    %ebp
 8048582:	c3                   	ret    

08048583 <longFromTwoInts>:
 8048583:	55                   	push   %ebp
 8048584:	89 e5                	mov    %esp,%ebp
 8048586:	53                   	push   %ebx
 8048587:	83 ec 0c             	sub    $0xc,%esp
 804858a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804858d:	89 04 24             	mov    %eax,(%esp)
 8048590:	e8 82 ff ff ff       	call   8048517 <UIntFromInt>
 8048595:	89 c3                	mov    %eax,%ebx
 8048597:	8b 45 08             	mov    0x8(%ebp),%eax
 804859a:	89 04 24             	mov    %eax,(%esp)
 804859d:	e8 75 ff ff ff       	call   8048517 <UIntFromInt>
 80485a2:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 80485a6:	89 04 24             	mov    %eax,(%esp)
 80485a9:	e8 8b ff ff ff       	call   8048539 <longFromTwoUInts>
 80485ae:	83 c4 0c             	add    $0xc,%esp
 80485b1:	5b                   	pop    %ebx
 80485b2:	5d                   	pop    %ebp
 80485b3:	c3                   	ret    

080485b4 <longToTwoUInts>:
 80485b4:	55                   	push   %ebp
 80485b5:	89 e5                	mov    %esp,%ebp
 80485b7:	83 ec 08             	sub    $0x8,%esp
 80485ba:	8b 45 08             	mov    0x8(%ebp),%eax
 80485bd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80485c0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485c3:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80485c6:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80485c9:	8b 45 14             	mov    0x14(%ebp),%eax
 80485cc:	89 10                	mov    %edx,(%eax)
 80485ce:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80485d1:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80485d4:	89 d0                	mov    %edx,%eax
 80485d6:	31 d2                	xor    %edx,%edx
 80485d8:	89 c2                	mov    %eax,%edx
 80485da:	8b 45 10             	mov    0x10(%ebp),%eax
 80485dd:	89 10                	mov    %edx,(%eax)
 80485df:	c9                   	leave  
 80485e0:	c3                   	ret    

080485e1 <longToTwoInts>:
 80485e1:	55                   	push   %ebp
 80485e2:	89 e5                	mov    %esp,%ebp
 80485e4:	83 ec 28             	sub    $0x28,%esp
 80485e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80485ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80485ed:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485f0:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80485f3:	8d 45 f8             	lea    -0x8(%ebp),%eax
 80485f6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485fa:	8d 45 fc             	lea    -0x4(%ebp),%eax
 80485fd:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048601:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048604:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048607:	89 04 24             	mov    %eax,(%esp)
 804860a:	89 54 24 04          	mov    %edx,0x4(%esp)
 804860e:	e8 a1 ff ff ff       	call   80485b4 <longToTwoUInts>
 8048613:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048616:	89 04 24             	mov    %eax,(%esp)
 8048619:	e8 0a ff ff ff       	call   8048528 <intFromUInt>
 804861e:	8b 55 10             	mov    0x10(%ebp),%edx
 8048621:	89 02                	mov    %eax,(%edx)
 8048623:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048626:	89 04 24             	mov    %eax,(%esp)
 8048629:	e8 fa fe ff ff       	call   8048528 <intFromUInt>
 804862e:	8b 55 14             	mov    0x14(%ebp),%edx
 8048631:	89 02                	mov    %eax,(%edx)
 8048633:	c9                   	leave  
 8048634:	c3                   	ret    

08048635 <doubleFromTwoUInts>:
 8048635:	55                   	push   %ebp
 8048636:	89 e5                	mov    %esp,%ebp
 8048638:	83 ec 18             	sub    $0x18,%esp
 804863b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804863e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048642:	8b 45 08             	mov    0x8(%ebp),%eax
 8048645:	89 04 24             	mov    %eax,(%esp)
 8048648:	e8 ec fe ff ff       	call   8048539 <longFromTwoUInts>
 804864d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048650:	89 55 fc             	mov    %edx,-0x4(%ebp)
 8048653:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048656:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8048659:	89 04 24             	mov    %eax,(%esp)
 804865c:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048660:	e8 8f fe ff ff       	call   80484f4 <doubleFromLong>
 8048665:	c9                   	leave  
 8048666:	c3                   	ret    

08048667 <doubleFromTwoInts>:
 8048667:	55                   	push   %ebp
 8048668:	89 e5                	mov    %esp,%ebp
 804866a:	53                   	push   %ebx
 804866b:	83 ec 0c             	sub    $0xc,%esp
 804866e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048671:	89 04 24             	mov    %eax,(%esp)
 8048674:	e8 9e fe ff ff       	call   8048517 <UIntFromInt>
 8048679:	89 c3                	mov    %eax,%ebx
 804867b:	8b 45 08             	mov    0x8(%ebp),%eax
 804867e:	89 04 24             	mov    %eax,(%esp)
 8048681:	e8 91 fe ff ff       	call   8048517 <UIntFromInt>
 8048686:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804868a:	89 04 24             	mov    %eax,(%esp)
 804868d:	e8 a3 ff ff ff       	call   8048635 <doubleFromTwoUInts>
 8048692:	83 c4 0c             	add    $0xc,%esp
 8048695:	5b                   	pop    %ebx
 8048696:	5d                   	pop    %ebp
 8048697:	c3                   	ret    

08048698 <doubleToTwoUInts>:
 8048698:	55                   	push   %ebp
 8048699:	89 e5                	mov    %esp,%ebp
 804869b:	83 ec 18             	sub    $0x18,%esp
 804869e:	8b 45 08             	mov    0x8(%ebp),%eax
 80486a1:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80486a4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80486a7:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80486aa:	dd 45 f8             	fldl   -0x8(%ebp)
 80486ad:	dd 1c 24             	fstpl  (%esp)
 80486b0:	e8 1f fe ff ff       	call   80484d4 <longFromDouble>
 80486b5:	8b 4d 14             	mov    0x14(%ebp),%ecx
 80486b8:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80486bc:	8b 4d 10             	mov    0x10(%ebp),%ecx
 80486bf:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80486c3:	89 04 24             	mov    %eax,(%esp)
 80486c6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80486ca:	e8 e5 fe ff ff       	call   80485b4 <longToTwoUInts>
 80486cf:	c9                   	leave  
 80486d0:	c3                   	ret    

080486d1 <doubleToTwoInts>:
 80486d1:	55                   	push   %ebp
 80486d2:	89 e5                	mov    %esp,%ebp
 80486d4:	83 ec 28             	sub    $0x28,%esp
 80486d7:	8b 45 08             	mov    0x8(%ebp),%eax
 80486da:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80486dd:	8b 45 0c             	mov    0xc(%ebp),%eax
 80486e0:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80486e3:	8d 45 f8             	lea    -0x8(%ebp),%eax
 80486e6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80486ea:	8d 45 fc             	lea    -0x4(%ebp),%eax
 80486ed:	89 44 24 08          	mov    %eax,0x8(%esp)
 80486f1:	dd 45 e8             	fldl   -0x18(%ebp)
 80486f4:	dd 1c 24             	fstpl  (%esp)
 80486f7:	e8 9c ff ff ff       	call   8048698 <doubleToTwoUInts>
 80486fc:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80486ff:	89 04 24             	mov    %eax,(%esp)
 8048702:	e8 21 fe ff ff       	call   8048528 <intFromUInt>
 8048707:	8b 55 10             	mov    0x10(%ebp),%edx
 804870a:	89 02                	mov    %eax,(%edx)
 804870c:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804870f:	89 04 24             	mov    %eax,(%esp)
 8048712:	e8 11 fe ff ff       	call   8048528 <intFromUInt>
 8048717:	8b 55 14             	mov    0x14(%ebp),%edx
 804871a:	89 02                	mov    %eax,(%edx)
 804871c:	c9                   	leave  
 804871d:	c3                   	ret    

0804871e <add32>:
 804871e:	55                   	push   %ebp
 804871f:	89 e5                	mov    %esp,%ebp
 8048721:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048724:	8b 55 08             	mov    0x8(%ebp),%edx
 8048727:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804872a:	5d                   	pop    %ebp
 804872b:	c3                   	ret    

0804872c <addU32>:
 804872c:	55                   	push   %ebp
 804872d:	89 e5                	mov    %esp,%ebp
 804872f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048732:	8b 55 08             	mov    0x8(%ebp),%edx
 8048735:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048738:	5d                   	pop    %ebp
 8048739:	c3                   	ret    

0804873a <add16>:
 804873a:	55                   	push   %ebp
 804873b:	89 e5                	mov    %esp,%ebp
 804873d:	83 ec 08             	sub    $0x8,%esp
 8048740:	8b 55 08             	mov    0x8(%ebp),%edx
 8048743:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048746:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
 804874a:	66 89 45 f8          	mov    %ax,-0x8(%ebp)
 804874e:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
 8048752:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
 8048756:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048759:	c9                   	leave  
 804875a:	c3                   	ret    

0804875b <cast32to16>:
 804875b:	55                   	push   %ebp
 804875c:	89 e5                	mov    %esp,%ebp
 804875e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048761:	5d                   	pop    %ebp
 8048762:	c3                   	ret    

08048763 <add64>:
 8048763:	55                   	push   %ebp
 8048764:	89 e5                	mov    %esp,%ebp
 8048766:	53                   	push   %ebx
 8048767:	83 ec 34             	sub    $0x34,%esp
 804876a:	8b 45 08             	mov    0x8(%ebp),%eax
 804876d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048770:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048773:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048776:	8b 45 10             	mov    0x10(%ebp),%eax
 8048779:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804877c:	8b 45 14             	mov    0x14(%ebp),%eax
 804877f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048782:	b9 f0 91 04 08       	mov    $0x80491f0,%ecx
 8048787:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804878a:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804878d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048791:	89 54 24 10          	mov    %edx,0x10(%esp)
 8048795:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048798:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804879b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804879f:	89 54 24 08          	mov    %edx,0x8(%esp)
 80487a3:	89 0c 24             	mov    %ecx,(%esp)
 80487a6:	e8 45 fc ff ff       	call   80483f0 <printf@plt>
 80487ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487ae:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80487b1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 80487b4:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80487b7:	01 c8                	add    %ecx,%eax
 80487b9:	11 da                	adc    %ebx,%edx
 80487bb:	83 c4 34             	add    $0x34,%esp
 80487be:	5b                   	pop    %ebx
 80487bf:	5d                   	pop    %ebp
 80487c0:	c3                   	ret    

080487c1 <addU64>:
 80487c1:	55                   	push   %ebp
 80487c2:	89 e5                	mov    %esp,%ebp
 80487c4:	53                   	push   %ebx
 80487c5:	83 ec 34             	sub    $0x34,%esp
 80487c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80487cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80487ce:	8b 45 0c             	mov    0xc(%ebp),%eax
 80487d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80487d4:	8b 45 10             	mov    0x10(%ebp),%eax
 80487d7:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80487da:	8b 45 14             	mov    0x14(%ebp),%eax
 80487dd:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80487e0:	b9 04 92 04 08       	mov    $0x8049204,%ecx
 80487e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487e8:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80487eb:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80487ef:	89 54 24 10          	mov    %edx,0x10(%esp)
 80487f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80487f6:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80487f9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487fd:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048801:	89 0c 24             	mov    %ecx,(%esp)
 8048804:	e8 e7 fb ff ff       	call   80483f0 <printf@plt>
 8048809:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804880c:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804880f:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8048812:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8048815:	01 c8                	add    %ecx,%eax
 8048817:	11 da                	adc    %ebx,%edx
 8048819:	83 c4 34             	add    $0x34,%esp
 804881c:	5b                   	pop    %ebx
 804881d:	5d                   	pop    %ebp
 804881e:	c3                   	ret    

0804881f <addFloat>:
 804881f:	55                   	push   %ebp
 8048820:	89 e5                	mov    %esp,%ebp
 8048822:	83 ec 14             	sub    $0x14,%esp
 8048825:	d9 45 08             	flds   0x8(%ebp)
 8048828:	d8 45 0c             	fadds  0xc(%ebp)
 804882b:	d9 05 3c 93 04 08    	flds   0x804933c
 8048831:	de c1                	faddp  %st,%st(1)
 8048833:	d9 7d ee             	fnstcw -0x12(%ebp)
 8048836:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax
 804883a:	b4 0c                	mov    $0xc,%ah
 804883c:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
 8048840:	d9 6d ec             	fldcw  -0x14(%ebp)
 8048843:	db 5d fc             	fistpl -0x4(%ebp)
 8048846:	d9 6d ee             	fldcw  -0x12(%ebp)
 8048849:	db 45 fc             	fildl  -0x4(%ebp)
 804884c:	c9                   	leave  
 804884d:	c3                   	ret    

0804884e <addDouble>:
 804884e:	55                   	push   %ebp
 804884f:	89 e5                	mov    %esp,%ebp
 8048851:	56                   	push   %esi
 8048852:	53                   	push   %ebx
 8048853:	83 ec 50             	sub    $0x50,%esp
 8048856:	8b 45 08             	mov    0x8(%ebp),%eax
 8048859:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804885c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804885f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048862:	8b 45 10             	mov    0x10(%ebp),%eax
 8048865:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048868:	8b 45 14             	mov    0x14(%ebp),%eax
 804886b:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804886e:	dd 45 d8             	fldl   -0x28(%ebp)
 8048871:	dd 1c 24             	fstpl  (%esp)
 8048874:	e8 5b fc ff ff       	call   80484d4 <longFromDouble>
 8048879:	89 c3                	mov    %eax,%ebx
 804887b:	89 d6                	mov    %edx,%esi
 804887d:	dd 45 e0             	fldl   -0x20(%ebp)
 8048880:	dd 1c 24             	fstpl  (%esp)
 8048883:	e8 4c fc ff ff       	call   80484d4 <longFromDouble>
 8048888:	b9 1c 92 04 08       	mov    $0x804921c,%ecx
 804888d:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
 8048891:	89 74 24 20          	mov    %esi,0x20(%esp)
 8048895:	89 44 24 14          	mov    %eax,0x14(%esp)
 8048899:	89 54 24 18          	mov    %edx,0x18(%esp)
 804889d:	dd 45 d8             	fldl   -0x28(%ebp)
 80488a0:	dd 5c 24 0c          	fstpl  0xc(%esp)
 80488a4:	dd 45 e0             	fldl   -0x20(%ebp)
 80488a7:	dd 5c 24 04          	fstpl  0x4(%esp)
 80488ab:	89 0c 24             	mov    %ecx,(%esp)
 80488ae:	e8 3d fb ff ff       	call   80483f0 <printf@plt>
 80488b3:	8d 45 f0             	lea    -0x10(%ebp),%eax
 80488b6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80488ba:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80488bd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80488c1:	dd 45 e0             	fldl   -0x20(%ebp)
 80488c4:	dd 1c 24             	fstpl  (%esp)
 80488c7:	e8 cc fd ff ff       	call   8048698 <doubleToTwoUInts>
 80488cc:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 80488cf:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80488d2:	b8 3c 92 04 08       	mov    $0x804923c,%eax
 80488d7:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80488db:	89 54 24 04          	mov    %edx,0x4(%esp)
 80488df:	89 04 24             	mov    %eax,(%esp)
 80488e2:	e8 09 fb ff ff       	call   80483f0 <printf@plt>
 80488e7:	8d 45 f0             	lea    -0x10(%ebp),%eax
 80488ea:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80488ee:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80488f1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80488f5:	dd 45 d8             	fldl   -0x28(%ebp)
 80488f8:	dd 1c 24             	fstpl  (%esp)
 80488fb:	e8 98 fd ff ff       	call   8048698 <doubleToTwoUInts>
 8048900:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8048903:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048906:	b8 44 92 04 08       	mov    $0x8049244,%eax
 804890b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804890f:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048913:	89 04 24             	mov    %eax,(%esp)
 8048916:	e8 d5 fa ff ff       	call   80483f0 <printf@plt>
 804891b:	dd 45 e0             	fldl   -0x20(%ebp)
 804891e:	dc 45 d8             	faddl  -0x28(%ebp)
 8048921:	83 c4 50             	add    $0x50,%esp
 8048924:	5b                   	pop    %ebx
 8048925:	5e                   	pop    %esi
 8048926:	5d                   	pop    %ebp
 8048927:	c3                   	ret    

08048928 <playWithDoubles>:
 8048928:	55                   	push   %ebp
 8048929:	89 e5                	mov    %esp,%ebp
 804892b:	83 ec 38             	sub    $0x38,%esp
 804892e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048931:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048934:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048937:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804893a:	dd 45 e0             	fldl   -0x20(%ebp)
 804893d:	dd 5d e8             	fstpl  -0x18(%ebp)
 8048940:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048947:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804894e:	eb 1c                	jmp    804896c <playWithDoubles+0x44>
 8048950:	dd 45 e0             	fldl   -0x20(%ebp)
 8048953:	dc 4d e0             	fmull  -0x20(%ebp)
 8048956:	dd 5c 24 08          	fstpl  0x8(%esp)
 804895a:	dd 45 e8             	fldl   -0x18(%ebp)
 804895d:	dd 1c 24             	fstpl  (%esp)
 8048960:	e8 e9 fe ff ff       	call   804884e <addDouble>
 8048965:	dd 5d e8             	fstpl  -0x18(%ebp)
 8048968:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804896c:	83 7d f4 03          	cmpl   $0x3,-0xc(%ebp)
 8048970:	7e de                	jle    8048950 <playWithDoubles+0x28>
 8048972:	dd 45 e8             	fldl   -0x18(%ebp)
 8048975:	c9                   	leave  
 8048976:	c3                   	ret    

08048977 <playWithFloats>:
 8048977:	55                   	push   %ebp
 8048978:	89 e5                	mov    %esp,%ebp
 804897a:	83 ec 10             	sub    $0x10,%esp
 804897d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048980:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048983:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804898a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048991:	eb 12                	jmp    80489a5 <playWithFloats+0x2e>
 8048993:	d9 45 08             	flds   0x8(%ebp)
 8048996:	d8 4d 08             	fmuls  0x8(%ebp)
 8048999:	d9 45 fc             	flds   -0x4(%ebp)
 804899c:	de c1                	faddp  %st,%st(1)
 804899e:	d9 5d fc             	fstps  -0x4(%ebp)
 80489a1:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80489a5:	83 7d f8 03          	cmpl   $0x3,-0x8(%ebp)
 80489a9:	7e e8                	jle    8048993 <playWithFloats+0x1c>
 80489ab:	d9 45 fc             	flds   -0x4(%ebp)
 80489ae:	c9                   	leave  
 80489af:	c3                   	ret    

080489b0 <playWithLongs>:
 80489b0:	55                   	push   %ebp
 80489b1:	89 e5                	mov    %esp,%ebp
 80489b3:	83 ec 18             	sub    $0x18,%esp
 80489b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80489b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80489bc:	8b 45 0c             	mov    0xc(%ebp),%eax
 80489bf:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80489c2:	a1 20 b0 04 08       	mov    0x804b020,%eax
 80489c7:	2d 73 77 00 00       	sub    $0x7773,%eax
 80489cc:	89 c2                	mov    %eax,%edx
 80489ce:	c1 fa 1f             	sar    $0x1f,%edx
 80489d1:	03 45 e8             	add    -0x18(%ebp),%eax
 80489d4:	13 55 ec             	adc    -0x14(%ebp),%edx
 80489d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80489da:	89 55 f4             	mov    %edx,-0xc(%ebp)
 80489dd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80489e4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80489eb:	eb 26                	jmp    8048a13 <playWithLongs+0x63>
 80489ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80489f0:	89 c1                	mov    %eax,%ecx
 80489f2:	0f af 4d e8          	imul   -0x18(%ebp),%ecx
 80489f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80489f9:	0f af 45 e8          	imul   -0x18(%ebp),%eax
 80489fd:	01 c1                	add    %eax,%ecx
 80489ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048a02:	f7 65 e8             	mull   -0x18(%ebp)
 8048a05:	01 d1                	add    %edx,%ecx
 8048a07:	89 ca                	mov    %ecx,%edx
 8048a09:	01 45 f0             	add    %eax,-0x10(%ebp)
 8048a0c:	11 55 f4             	adc    %edx,-0xc(%ebp)
 8048a0f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8048a13:	83 7d fc 63          	cmpl   $0x63,-0x4(%ebp)
 8048a17:	7e d4                	jle    80489ed <playWithLongs+0x3d>
 8048a19:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048a1c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048a1f:	c9                   	leave  
 8048a20:	c3                   	ret    

08048a21 <testLongFromUints>:
 8048a21:	55                   	push   %ebp
 8048a22:	89 e5                	mov    %esp,%ebp
 8048a24:	83 ec 48             	sub    $0x48,%esp
 8048a27:	c7 45 e8 4e c5 c8 ad 	movl   $0xadc8c54e,-0x18(%ebp)
 8048a2e:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
 8048a35:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048a38:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048a3c:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8048a3f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a43:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048a46:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048a49:	89 04 24             	mov    %eax,(%esp)
 8048a4c:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048a50:	e8 5f fb ff ff       	call   80485b4 <longToTwoUInts>
 8048a55:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048a58:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a5b:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048a5f:	89 04 24             	mov    %eax,(%esp)
 8048a62:	e8 d2 fa ff ff       	call   8048539 <longFromTwoUInts>
 8048a67:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048a6a:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8048a6d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048a70:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8048a73:	89 d1                	mov    %edx,%ecx
 8048a75:	33 4d ec             	xor    -0x14(%ebp),%ecx
 8048a78:	33 45 e8             	xor    -0x18(%ebp),%eax
 8048a7b:	09 c8                	or     %ecx,%eax
 8048a7d:	85 c0                	test   %eax,%eax
 8048a7f:	74 37                	je     8048ab8 <testLongFromUints+0x97>
 8048a81:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048a84:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a87:	b9 50 92 04 08       	mov    $0x8049250,%ecx
 8048a8c:	89 54 24 18          	mov    %edx,0x18(%esp)
 8048a90:	89 44 24 14          	mov    %eax,0x14(%esp)
 8048a94:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048a97:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048a9a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048a9e:	89 54 24 10          	mov    %edx,0x10(%esp)
 8048aa2:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048aa5:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8048aa8:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048aac:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048ab0:	89 0c 24             	mov    %ecx,(%esp)
 8048ab3:	e8 38 f9 ff ff       	call   80483f0 <printf@plt>
 8048ab8:	c9                   	leave  
 8048ab9:	c3                   	ret    

08048aba <testDoubleFromUint>:
 8048aba:	55                   	push   %ebp
 8048abb:	89 e5                	mov    %esp,%ebp
 8048abd:	83 ec 58             	sub    $0x58,%esp
 8048ac0:	dd 05 40 93 04 08    	fldl   0x8049340
 8048ac6:	dd 5d e0             	fstpl  -0x20(%ebp)
 8048ac9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8048acc:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ad0:	8d 45 ec             	lea    -0x14(%ebp),%eax
 8048ad3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048ad7:	dd 45 e0             	fldl   -0x20(%ebp)
 8048ada:	dd 1c 24             	fstpl  (%esp)
 8048add:	e8 ef fb ff ff       	call   80486d1 <doubleToTwoInts>
 8048ae2:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048ae5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ae9:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8048aec:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048af0:	dd 45 e0             	fldl   -0x20(%ebp)
 8048af3:	dd 1c 24             	fstpl  (%esp)
 8048af6:	e8 9d fb ff ff       	call   8048698 <doubleToTwoUInts>
 8048afb:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8048afe:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048b01:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048b05:	89 04 24             	mov    %eax,(%esp)
 8048b08:	e8 5a fb ff ff       	call   8048667 <doubleFromTwoInts>
 8048b0d:	dd 5d d8             	fstpl  -0x28(%ebp)
 8048b10:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048b13:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048b16:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048b1a:	89 04 24             	mov    %eax,(%esp)
 8048b1d:	e8 13 fb ff ff       	call   8048635 <doubleFromTwoUInts>
 8048b22:	dd 5d d0             	fstpl  -0x30(%ebp)
 8048b25:	dd 45 d8             	fldl   -0x28(%ebp)
 8048b28:	dd 45 e0             	fldl   -0x20(%ebp)
 8048b2b:	d9 c9                	fxch   %st(1)
 8048b2d:	da e9                	fucompp 
 8048b2f:	df e0                	fnstsw %ax
 8048b31:	9e                   	sahf   
 8048b32:	7a 02                	jp     8048b36 <testDoubleFromUint+0x7c>
 8048b34:	74 29                	je     8048b5f <testDoubleFromUint+0xa5>
 8048b36:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 8048b39:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048b3c:	b8 78 92 04 08       	mov    $0x8049278,%eax
 8048b41:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8048b45:	89 54 24 14          	mov    %edx,0x14(%esp)
 8048b49:	dd 45 e0             	fldl   -0x20(%ebp)
 8048b4c:	dd 5c 24 0c          	fstpl  0xc(%esp)
 8048b50:	dd 45 d8             	fldl   -0x28(%ebp)
 8048b53:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048b57:	89 04 24             	mov    %eax,(%esp)
 8048b5a:	e8 91 f8 ff ff       	call   80483f0 <printf@plt>
 8048b5f:	dd 45 d0             	fldl   -0x30(%ebp)
 8048b62:	dd 45 e0             	fldl   -0x20(%ebp)
 8048b65:	d9 c9                	fxch   %st(1)
 8048b67:	da e9                	fucompp 
 8048b69:	df e0                	fnstsw %ax
 8048b6b:	9e                   	sahf   
 8048b6c:	7a 02                	jp     8048b70 <testDoubleFromUint+0xb6>
 8048b6e:	74 29                	je     8048b99 <testDoubleFromUint+0xdf>
 8048b70:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8048b73:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048b76:	b8 9c 92 04 08       	mov    $0x804929c,%eax
 8048b7b:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8048b7f:	89 54 24 14          	mov    %edx,0x14(%esp)
 8048b83:	dd 45 e0             	fldl   -0x20(%ebp)
 8048b86:	dd 5c 24 0c          	fstpl  0xc(%esp)
 8048b8a:	dd 45 d0             	fldl   -0x30(%ebp)
 8048b8d:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048b91:	89 04 24             	mov    %eax,(%esp)
 8048b94:	e8 57 f8 ff ff       	call   80483f0 <printf@plt>
 8048b99:	c7 45 ec e6 dd ff ff 	movl   $0xffffdde6,-0x14(%ebp)
 8048ba0:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048ba3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048ba6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048ba9:	89 04 24             	mov    %eax,(%esp)
 8048bac:	e8 66 f9 ff ff       	call   8048517 <UIntFromInt>
 8048bb1:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048bb4:	39 d0                	cmp    %edx,%eax
 8048bb6:	0f 95 c0             	setne  %al
 8048bb9:	0f b6 c0             	movzbl %al,%eax
 8048bbc:	89 04 24             	mov    %eax,(%esp)
 8048bbf:	e8 64 f9 ff ff       	call   8048528 <intFromUInt>
 8048bc4:	85 c0                	test   %eax,%eax
 8048bc6:	74 0c                	je     8048bd4 <testDoubleFromUint+0x11a>
 8048bc8:	c7 04 24 c0 92 04 08 	movl   $0x80492c0,(%esp)
 8048bcf:	e8 3c f8 ff ff       	call   8048410 <puts@plt>
 8048bd4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048bd7:	89 04 24             	mov    %eax,(%esp)
 8048bda:	e8 49 f9 ff ff       	call   8048528 <intFromUInt>
 8048bdf:	89 c2                	mov    %eax,%edx
 8048be1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048be4:	39 c2                	cmp    %eax,%edx
 8048be6:	0f 95 c0             	setne  %al
 8048be9:	0f b6 c0             	movzbl %al,%eax
 8048bec:	89 04 24             	mov    %eax,(%esp)
 8048bef:	e8 23 f9 ff ff       	call   8048517 <UIntFromInt>
 8048bf4:	85 c0                	test   %eax,%eax
 8048bf6:	74 0c                	je     8048c04 <testDoubleFromUint+0x14a>
 8048bf8:	c7 04 24 c8 92 04 08 	movl   $0x80492c8,(%esp)
 8048bff:	e8 0c f8 ff ff       	call   8048410 <puts@plt>
 8048c04:	c9                   	leave  
 8048c05:	c3                   	ret    

08048c06 <main1>:
 8048c06:	55                   	push   %ebp
 8048c07:	89 e5                	mov    %esp,%ebp
 8048c09:	83 ec 48             	sub    $0x48,%esp
 8048c0c:	c7 45 f0 a7 b6 19 00 	movl   $0x19b6a7,-0x10(%ebp)
 8048c13:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8048c1a:	c6 45 f7 05          	movb   $0x5,-0x9(%ebp)
 8048c1e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8048c25:	eb 15                	jmp    8048c3c <main1+0x36>
 8048c27:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048c2a:	6b c0 77             	imul   $0x77,%eax,%eax
 8048c2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048c30:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048c33:	01 c0                	add    %eax,%eax
 8048c35:	01 45 f0             	add    %eax,-0x10(%ebp)
 8048c38:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8048c3c:	83 7d ec 04          	cmpl   $0x4,-0x14(%ebp)
 8048c40:	7e e5                	jle    8048c27 <main1+0x21>
 8048c42:	0f be 45 f7          	movsbl -0x9(%ebp),%eax
 8048c46:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048c49:	0f af c2             	imul   %edx,%eax
 8048c4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048c4f:	c7 45 e8 aa aa aa 2a 	movl   $0x2aaaaaaa,-0x18(%ebp)
 8048c56:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8048c5d:	eb 0a                	jmp    8048c69 <main1+0x63>
 8048c5f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048c62:	01 45 f0             	add    %eax,-0x10(%ebp)
 8048c65:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8048c69:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)
 8048c6d:	7e f0                	jle    8048c5f <main1+0x59>
 8048c6f:	c7 44 24 04 91 00 00 	movl   $0x91,0x4(%esp)
 8048c76:	00 
 8048c77:	c7 04 24 f7 7f 00 00 	movl   $0x7ff7,(%esp)
 8048c7e:	e8 b7 fa ff ff       	call   804873a <add16>
 8048c83:	98                   	cwtl   
 8048c84:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048c87:	c7 04 24 87 87 07 00 	movl   $0x78787,(%esp)
 8048c8e:	e8 c8 fa ff ff       	call   804875b <cast32to16>
 8048c93:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
 8048c97:	0f bf 55 f4          	movswl -0xc(%ebp),%edx
 8048c9b:	b8 d0 92 04 08       	mov    $0x80492d0,%eax
 8048ca0:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048ca4:	89 04 24             	mov    %eax,(%esp)
 8048ca7:	e8 44 f7 ff ff       	call   80483f0 <printf@plt>
 8048cac:	c7 45 e4 fb ff ff 7f 	movl   $0x7ffffffb,-0x1c(%ebp)
 8048cb3:	c7 45 e0 08 00 00 00 	movl   $0x8,-0x20(%ebp)
 8048cba:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048cbd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048cc1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048cc4:	89 04 24             	mov    %eax,(%esp)
 8048cc7:	e8 52 fa ff ff       	call   804871e <add32>
 8048ccc:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048ccf:	c7 45 d0 fb ff ff ff 	movl   $0xfffffffb,-0x30(%ebp)
 8048cd6:	c7 45 d4 ff ff ff 7f 	movl   $0x7fffffff,-0x2c(%ebp)
 8048cdd:	c7 45 c8 08 00 00 00 	movl   $0x8,-0x38(%ebp)
 8048ce4:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 8048ceb:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048cee:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8048cf1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048cf5:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8048cf9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8048cfc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8048cff:	89 04 24             	mov    %eax,(%esp)
 8048d02:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048d06:	e8 58 fa ff ff       	call   8048763 <add64>
 8048d0b:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048d0e:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8048d11:	b8 ff ff 7f 7f       	mov    $0x7f7fffff,%eax
 8048d16:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048d19:	b8 ff ff 7f 7f       	mov    $0x7f7fffff,%eax
 8048d1e:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048d21:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d24:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d28:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048d2b:	89 04 24             	mov    %eax,(%esp)
 8048d2e:	e8 ec fa ff ff       	call   804881f <addFloat>
 8048d33:	d9 5d d8             	fstps  -0x28(%ebp)
 8048d36:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048d39:	89 04 24             	mov    %eax,(%esp)
 8048d3c:	e8 bf f6 ff ff       	call   8048400 <__isnanf@plt>
 8048d41:	85 c0                	test   %eax,%eax
 8048d43:	74 08                	je     8048d4d <main1+0x147>
 8048d45:	b8 00 00 00 00       	mov    $0x0,%eax
 8048d4a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048d4d:	b8 00 00 00 40       	mov    $0x40000000,%eax
 8048d52:	89 04 24             	mov    %eax,(%esp)
 8048d55:	e8 1d fc ff ff       	call   8048977 <playWithFloats>
 8048d5a:	b8 d9 92 04 08       	mov    $0x80492d9,%eax
 8048d5f:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048d63:	89 04 24             	mov    %eax,(%esp)
 8048d66:	e8 85 f6 ff ff       	call   80483f0 <printf@plt>
 8048d6b:	dd 05 48 93 04 08    	fldl   0x8049348
 8048d71:	dd 1c 24             	fstpl  (%esp)
 8048d74:	e8 af fb ff ff       	call   8048928 <playWithDoubles>
 8048d79:	b8 e5 92 04 08       	mov    $0x80492e5,%eax
 8048d7e:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048d82:	89 04 24             	mov    %eax,(%esp)
 8048d85:	e8 66 f6 ff ff       	call   80483f0 <printf@plt>
 8048d8a:	dd 05 50 93 04 08    	fldl   0x8049350
 8048d90:	dd 1c 24             	fstpl  (%esp)
 8048d93:	e8 90 fb ff ff       	call   8048928 <playWithDoubles>
 8048d98:	b8 e5 92 04 08       	mov    $0x80492e5,%eax
 8048d9d:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048da1:	89 04 24             	mov    %eax,(%esp)
 8048da4:	e8 47 f6 ff ff       	call   80483f0 <printf@plt>
 8048da9:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8048db0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048db7:	00 
 8048db8:	e8 f3 fb ff ff       	call   80489b0 <playWithLongs>
 8048dbd:	b9 f2 92 04 08       	mov    $0x80492f2,%ecx
 8048dc2:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048dc6:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048dca:	89 0c 24             	mov    %ecx,(%esp)
 8048dcd:	e8 1e f6 ff ff       	call   80483f0 <printf@plt>
 8048dd2:	b8 00 00 00 00       	mov    $0x0,%eax
 8048dd7:	c9                   	leave  
 8048dd8:	c3                   	ret    

08048dd9 <ulp>:
 8048dd9:	55                   	push   %ebp
 8048dda:	89 e5                	mov    %esp,%ebp
 8048ddc:	83 ec 28             	sub    $0x28,%esp
 8048ddf:	8b 45 08             	mov    0x8(%ebp),%eax
 8048de2:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048de5:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048de8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048deb:	dd 05 58 93 04 08    	fldl   0x8049358
 8048df1:	dd 5c 24 08          	fstpl  0x8(%esp)
 8048df5:	dd 45 f0             	fldl   -0x10(%ebp)
 8048df8:	dd 1c 24             	fstpl  (%esp)
 8048dfb:	e8 e0 f5 ff ff       	call   80483e0 <nextafter@plt>
 8048e00:	dc 65 f0             	fsubl  -0x10(%ebp)
 8048e03:	d9 e1                	fabs   
 8048e05:	c9                   	leave  
 8048e06:	c3                   	ret    

08048e07 <suspecious_short>:
 8048e07:	55                   	push   %ebp
 8048e08:	89 e5                	mov    %esp,%ebp
 8048e0a:	83 ec 18             	sub    $0x18,%esp
 8048e0d:	66 c7 45 fe ff 7f    	movw   $0x7fff,-0x2(%ebp)
 8048e13:	66 c7 45 fc 00 80    	movw   $0x8000,-0x4(%ebp)
 8048e19:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048e20:	0f bf 55 fe          	movswl -0x2(%ebp),%edx
 8048e24:	0f bf 45 fe          	movswl -0x2(%ebp),%eax
 8048e28:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048e2c:	89 04 24             	mov    %eax,(%esp)
 8048e2f:	e8 06 f9 ff ff       	call   804873a <add16>
 8048e34:	98                   	cwtl   
 8048e35:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048e38:	0f bf 55 fe          	movswl -0x2(%ebp),%edx
 8048e3c:	0f bf 45 fe          	movswl -0x2(%ebp),%eax
 8048e40:	0f af c2             	imul   %edx,%eax
 8048e43:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048e46:	0f bf 45 fc          	movswl -0x4(%ebp),%eax
 8048e4a:	f7 d8                	neg    %eax
 8048e4c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048e4f:	0f bf 55 fe          	movswl -0x2(%ebp),%edx
 8048e53:	0f bf 45 fc          	movswl -0x4(%ebp),%eax
 8048e57:	89 d1                	mov    %edx,%ecx
 8048e59:	29 c1                	sub    %eax,%ecx
 8048e5b:	89 c8                	mov    %ecx,%eax
 8048e5d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048e60:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048e63:	c9                   	leave  
 8048e64:	c3                   	ret    

08048e65 <suspecious_computations>:
 8048e65:	55                   	push   %ebp
 8048e66:	89 e5                	mov    %esp,%ebp
 8048e68:	83 ec 68             	sub    $0x68,%esp
 8048e6b:	dd 05 60 93 04 08    	fldl   0x8049360
 8048e71:	dd 5d d8             	fstpl  -0x28(%ebp)
 8048e74:	dd 05 68 93 04 08    	fldl   0x8049368
 8048e7a:	dd 5d d0             	fstpl  -0x30(%ebp)
 8048e7d:	dd 05 70 93 04 08    	fldl   0x8049370
 8048e83:	dd 5d c8             	fstpl  -0x38(%ebp)
 8048e86:	dd 05 58 93 04 08    	fldl   0x8049358
 8048e8c:	dd 5d c0             	fstpl  -0x40(%ebp)
 8048e8f:	dd 05 78 93 04 08    	fldl   0x8049378
 8048e95:	dd 5d b8             	fstpl  -0x48(%ebp)
 8048e98:	d9 ee                	fldz   
 8048e9a:	dd 5d b0             	fstpl  -0x50(%ebp)
 8048e9d:	d9 ee                	fldz   
 8048e9f:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ea2:	dd 45 d8             	fldl   -0x28(%ebp)
 8048ea5:	dc 45 d0             	faddl  -0x30(%ebp)
 8048ea8:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048eab:	dd 45 c8             	fldl   -0x38(%ebp)
 8048eae:	d8 c0                	fadd   %st(0),%st
 8048eb0:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048eb3:	dd 45 d8             	fldl   -0x28(%ebp)
 8048eb6:	dc 65 d0             	fsubl  -0x30(%ebp)
 8048eb9:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ebc:	dd 45 c0             	fldl   -0x40(%ebp)
 8048ebf:	dc 75 c0             	fdivl  -0x40(%ebp)
 8048ec2:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ec5:	dd 45 d8             	fldl   -0x28(%ebp)
 8048ec8:	dc 75 b0             	fdivl  -0x50(%ebp)
 8048ecb:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ece:	dd 45 d0             	fldl   -0x30(%ebp)
 8048ed1:	dc 75 b0             	fdivl  -0x50(%ebp)
 8048ed4:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ed7:	dd 45 b0             	fldl   -0x50(%ebp)
 8048eda:	dc 75 b0             	fdivl  -0x50(%ebp)
 8048edd:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048ee0:	b8 ff 92 04 08       	mov    $0x80492ff,%eax
 8048ee5:	dd 45 a8             	fldl   -0x58(%ebp)
 8048ee8:	dd 5c 24 04          	fstpl  0x4(%esp)
 8048eec:	89 04 24             	mov    %eax,(%esp)
 8048eef:	e8 fc f4 ff ff       	call   80483f0 <printf@plt>
 8048ef4:	dd 45 d8             	fldl   -0x28(%ebp)
 8048ef7:	dd 1c 24             	fstpl  (%esp)
 8048efa:	e8 da fe ff ff       	call   8048dd9 <ulp>
 8048eff:	dc 65 d8             	fsubl  -0x28(%ebp)
 8048f02:	dc 45 d8             	faddl  -0x28(%ebp)
 8048f05:	dd 5d a8             	fstpl  -0x58(%ebp)
 8048f08:	c7 45 f0 ff ff ff 7f 	movl   $0x7fffffff,-0x10(%ebp)
 8048f0f:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%ebp)
 8048f16:	c7 45 e8 ff ff ff ff 	movl   $0xffffffff,-0x18(%ebp)
 8048f1d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8048f24:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048f27:	01 c0                	add    %eax,%eax
 8048f29:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048f2c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048f2f:	0f af 45 f0          	imul   -0x10(%ebp),%eax
 8048f33:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048f36:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048f39:	f7 d8                	neg    %eax
 8048f3b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048f3e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048f41:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048f44:	89 d1                	mov    %edx,%ecx
 8048f46:	29 c1                	sub    %eax,%ecx
 8048f48:	89 c8                	mov    %ecx,%eax
 8048f4a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048f4d:	66 c7 45 f6 ff 7f    	movw   $0x7fff,-0xa(%ebp)
 8048f53:	66 c7 45 f4 00 80    	movw   $0x8000,-0xc(%ebp)
 8048f59:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 8048f60:	0f bf 55 f6          	movswl -0xa(%ebp),%edx
 8048f64:	0f bf 45 f6          	movswl -0xa(%ebp),%eax
 8048f68:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048f6c:	89 04 24             	mov    %eax,(%esp)
 8048f6f:	e8 c6 f7 ff ff       	call   804873a <add16>
 8048f74:	98                   	cwtl   
 8048f75:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048f78:	0f bf 55 f6          	movswl -0xa(%ebp),%edx
 8048f7c:	0f bf 45 f6          	movswl -0xa(%ebp),%eax
 8048f80:	0f af c2             	imul   %edx,%eax
 8048f83:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048f86:	0f bf 45 f4          	movswl -0xc(%ebp),%eax
 8048f8a:	f7 d8                	neg    %eax
 8048f8c:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048f8f:	0f bf 55 f6          	movswl -0xa(%ebp),%edx
 8048f93:	0f bf 45 f4          	movswl -0xc(%ebp),%eax
 8048f97:	89 d1                	mov    %edx,%ecx
 8048f99:	29 c1                	sub    %eax,%ecx
 8048f9b:	89 c8                	mov    %ecx,%eax
 8048f9d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048fa0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048fa3:	c9                   	leave  
 8048fa4:	c3                   	ret    

08048fa5 <normal_computations>:
 8048fa5:	55                   	push   %ebp
 8048fa6:	89 e5                	mov    %esp,%ebp
 8048fa8:	83 ec 40             	sub    $0x40,%esp
 8048fab:	dd 05 60 93 04 08    	fldl   0x8049360
 8048fb1:	dd 5d f8             	fstpl  -0x8(%ebp)
 8048fb4:	dd 05 68 93 04 08    	fldl   0x8049368
 8048fba:	dd 5d f0             	fstpl  -0x10(%ebp)
 8048fbd:	dd 05 70 93 04 08    	fldl   0x8049370
 8048fc3:	dd 5d e8             	fstpl  -0x18(%ebp)
 8048fc6:	dd 05 58 93 04 08    	fldl   0x8049358
 8048fcc:	dd 5d e0             	fstpl  -0x20(%ebp)
 8048fcf:	dd 05 78 93 04 08    	fldl   0x8049378
 8048fd5:	dd 5d d8             	fstpl  -0x28(%ebp)
 8048fd8:	d9 ee                	fldz   
 8048fda:	dd 5d d0             	fstpl  -0x30(%ebp)
 8048fdd:	d9 ee                	fldz   
 8048fdf:	dd 5d c8             	fstpl  -0x38(%ebp)
 8048fe2:	dd 45 f8             	fldl   -0x8(%ebp)
 8048fe5:	d8 c0                	fadd   %st(0),%st
 8048fe7:	dd 5d c8             	fstpl  -0x38(%ebp)
 8048fea:	dd 45 f0             	fldl   -0x10(%ebp)
 8048fed:	d8 c0                	fadd   %st(0),%st
 8048fef:	dd 5d c8             	fstpl  -0x38(%ebp)
 8048ff2:	dd 45 e8             	fldl   -0x18(%ebp)
 8048ff5:	dc 65 e8             	fsubl  -0x18(%ebp)
 8048ff8:	dd 5d c8             	fstpl  -0x38(%ebp)
 8048ffb:	c9                   	leave  
 8048ffc:	c3                   	ret    

08048ffd <mycheck_Add32>:
 8048ffd:	55                   	push   %ebp
 8048ffe:	89 e5                	mov    %esp,%ebp
 8049000:	83 ec 38             	sub    $0x38,%esp
 8049003:	b8 05 93 04 08       	mov    $0x8049305,%eax
 8049008:	8b 55 0c             	mov    0xc(%ebp),%edx
 804900b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804900f:	8b 55 08             	mov    0x8(%ebp),%edx
 8049012:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049016:	89 04 24             	mov    %eax,(%esp)
 8049019:	e8 d2 f3 ff ff       	call   80483f0 <printf@plt>
 804901e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8049022:	7e 45                	jle    8049069 <mycheck_Add32+0x6c>
 8049024:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049028:	7e 3f                	jle    8049069 <mycheck_Add32+0x6c>
 804902a:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
 804902f:	2b 45 08             	sub    0x8(%ebp),%eax
 8049032:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049035:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049038:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804903b:	7e 77                	jle    80490b4 <mycheck_Add32+0xb7>
 804903d:	b8 1a 93 04 08       	mov    $0x804931a,%eax
 8049042:	c7 44 24 10 ff ff ff 	movl   $0x7fffffff,0x10(%esp)
 8049049:	7f 
 804904a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804904d:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049051:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049054:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049058:	8b 55 08             	mov    0x8(%ebp),%edx
 804905b:	89 54 24 04          	mov    %edx,0x4(%esp)
 804905f:	89 04 24             	mov    %eax,(%esp)
 8049062:	e8 89 f3 ff ff       	call   80483f0 <printf@plt>
 8049067:	eb 4c                	jmp    80490b5 <mycheck_Add32+0xb8>
 8049069:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804906d:	79 46                	jns    80490b5 <mycheck_Add32+0xb8>
 804906f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049073:	79 40                	jns    80490b5 <mycheck_Add32+0xb8>
 8049075:	b8 00 00 00 80       	mov    $0x80000000,%eax
 804907a:	2b 45 08             	sub    0x8(%ebp),%eax
 804907d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049080:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049083:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8049086:	7d 2d                	jge    80490b5 <mycheck_Add32+0xb8>
 8049088:	b8 1a 93 04 08       	mov    $0x804931a,%eax
 804908d:	c7 44 24 10 ff ff ff 	movl   $0x7fffffff,0x10(%esp)
 8049094:	7f 
 8049095:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049098:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804909c:	8b 55 0c             	mov    0xc(%ebp),%edx
 804909f:	89 54 24 08          	mov    %edx,0x8(%esp)
 80490a3:	8b 55 08             	mov    0x8(%ebp),%edx
 80490a6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80490aa:	89 04 24             	mov    %eax,(%esp)
 80490ad:	e8 3e f3 ff ff       	call   80483f0 <printf@plt>
 80490b2:	eb 01                	jmp    80490b5 <mycheck_Add32+0xb8>
 80490b4:	90                   	nop
 80490b5:	c9                   	leave  
 80490b6:	c3                   	ret    

080490b7 <main11>:
 80490b7:	55                   	push   %ebp
 80490b8:	89 e5                	mov    %esp,%ebp
 80490ba:	83 ec 08             	sub    $0x8,%esp
 80490bd:	e8 a3 fd ff ff       	call   8048e65 <suspecious_computations>
 80490c2:	e8 de fe ff ff       	call   8048fa5 <normal_computations>
 80490c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80490cc:	c9                   	leave  
 80490cd:	c3                   	ret    

080490ce <main>:
 80490ce:	55                   	push   %ebp
 80490cf:	89 e5                	mov    %esp,%ebp
 80490d1:	83 e4 f0             	and    $0xfffffff0,%esp
 80490d4:	83 ec 20             	sub    $0x20,%esp
 80490d7:	c7 44 24 1c 00 00 00 	movl   $0x80000000,0x1c(%esp)
 80490de:	80 
 80490df:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
 80490e6:	ff 
 80490e7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80490eb:	89 c2                	mov    %eax,%edx
 80490ed:	c1 fa 1f             	sar    $0x1f,%edx
 80490f0:	f7 7c 24 18          	idivl  0x18(%esp)
 80490f4:	89 44 24 14          	mov    %eax,0x14(%esp)
 80490f8:	b8 2e 93 04 08       	mov    $0x804932e,%eax
 80490fd:	8b 54 24 14          	mov    0x14(%esp),%edx
 8049101:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049105:	8b 54 24 18          	mov    0x18(%esp),%edx
 8049109:	89 54 24 08          	mov    %edx,0x8(%esp)
 804910d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049111:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049115:	89 04 24             	mov    %eax,(%esp)
 8049118:	e8 d3 f2 ff ff       	call   80483f0 <printf@plt>
 804911d:	b8 00 00 00 00       	mov    $0x0,%eax
 8049122:	c9                   	leave  
 8049123:	c3                   	ret    
 8049124:	90                   	nop
 8049125:	90                   	nop
 8049126:	90                   	nop
 8049127:	90                   	nop
 8049128:	90                   	nop
 8049129:	90                   	nop
 804912a:	90                   	nop
 804912b:	90                   	nop
 804912c:	90                   	nop
 804912d:	90                   	nop
 804912e:	90                   	nop
 804912f:	90                   	nop

08049130 <__libc_csu_fini>:
 8049130:	55                   	push   %ebp
 8049131:	89 e5                	mov    %esp,%ebp
 8049133:	5d                   	pop    %ebp
 8049134:	c3                   	ret    
 8049135:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049139:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049140 <__libc_csu_init>:
 8049140:	55                   	push   %ebp
 8049141:	89 e5                	mov    %esp,%ebp
 8049143:	57                   	push   %edi
 8049144:	56                   	push   %esi
 8049145:	53                   	push   %ebx
 8049146:	e8 4f 00 00 00       	call   804919a <__i686.get_pc_thunk.bx>
 804914b:	81 c3 a9 1e 00 00    	add    $0x1ea9,%ebx
 8049151:	83 ec 1c             	sub    $0x1c,%esp
 8049154:	e8 27 f2 ff ff       	call   8048380 <_init>
 8049159:	8d bb 10 ff ff ff    	lea    -0xf0(%ebx),%edi
 804915f:	8d 83 10 ff ff ff    	lea    -0xf0(%ebx),%eax
 8049165:	29 c7                	sub    %eax,%edi
 8049167:	c1 ff 02             	sar    $0x2,%edi
 804916a:	85 ff                	test   %edi,%edi
 804916c:	74 24                	je     8049192 <__libc_csu_init+0x52>
 804916e:	31 f6                	xor    %esi,%esi
 8049170:	8b 45 10             	mov    0x10(%ebp),%eax
 8049173:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049177:	8b 45 0c             	mov    0xc(%ebp),%eax
 804917a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804917e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049181:	89 04 24             	mov    %eax,(%esp)
 8049184:	ff 94 b3 10 ff ff ff 	call   *-0xf0(%ebx,%esi,4)
 804918b:	83 c6 01             	add    $0x1,%esi
 804918e:	39 fe                	cmp    %edi,%esi
 8049190:	72 de                	jb     8049170 <__libc_csu_init+0x30>
 8049192:	83 c4 1c             	add    $0x1c,%esp
 8049195:	5b                   	pop    %ebx
 8049196:	5e                   	pop    %esi
 8049197:	5f                   	pop    %edi
 8049198:	5d                   	pop    %ebp
 8049199:	c3                   	ret    

0804919a <__i686.get_pc_thunk.bx>:
 804919a:	8b 1c 24             	mov    (%esp),%ebx
 804919d:	c3                   	ret    
 804919e:	90                   	nop
 804919f:	90                   	nop

080491a0 <__do_global_ctors_aux>:
 80491a0:	55                   	push   %ebp
 80491a1:	89 e5                	mov    %esp,%ebp
 80491a3:	53                   	push   %ebx
 80491a4:	83 ec 04             	sub    $0x4,%esp
 80491a7:	a1 04 af 04 08       	mov    0x804af04,%eax
 80491ac:	83 f8 ff             	cmp    $0xffffffff,%eax
 80491af:	74 13                	je     80491c4 <__do_global_ctors_aux+0x24>
 80491b1:	bb 04 af 04 08       	mov    $0x804af04,%ebx
 80491b6:	66 90                	xchg   %ax,%ax
 80491b8:	83 eb 04             	sub    $0x4,%ebx
 80491bb:	ff d0                	call   *%eax
 80491bd:	8b 03                	mov    (%ebx),%eax
 80491bf:	83 f8 ff             	cmp    $0xffffffff,%eax
 80491c2:	75 f4                	jne    80491b8 <__do_global_ctors_aux+0x18>
 80491c4:	83 c4 04             	add    $0x4,%esp
 80491c7:	5b                   	pop    %ebx
 80491c8:	5d                   	pop    %ebp
 80491c9:	c3                   	ret    
 80491ca:	90                   	nop
 80491cb:	90                   	nop

Disassembly of section .fini:

080491cc <_fini>:
 80491cc:	55                   	push   %ebp
 80491cd:	89 e5                	mov    %esp,%ebp
 80491cf:	53                   	push   %ebx
 80491d0:	83 ec 04             	sub    $0x4,%esp
 80491d3:	e8 00 00 00 00       	call   80491d8 <_fini+0xc>
 80491d8:	5b                   	pop    %ebx
 80491d9:	81 c3 1c 1e 00 00    	add    $0x1e1c,%ebx
 80491df:	e8 6c f2 ff ff       	call   8048450 <__do_global_dtors_aux>
 80491e4:	59                   	pop    %ecx
 80491e5:	5b                   	pop    %ebx
 80491e6:	c9                   	leave  
 80491e7:	c3                   	ret    
